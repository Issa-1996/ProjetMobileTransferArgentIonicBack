<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Compte extends \App\Entity\Compte implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'numeroCompte', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'solde', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'transactionDepot', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'transactionRetrait', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'dateDernierAccess'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'numeroCompte', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'solde', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'transactionDepot', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'transactionRetrait', '' . "\0" . 'App\\Entity\\Compte' . "\0" . 'dateDernierAccess'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Compte $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroCompte(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroCompte', []);

        return parent::getNumeroCompte();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroCompte(string $numeroCompte): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroCompte', [$numeroCompte]);

        return parent::setNumeroCompte($numeroCompte);
    }

    /**
     * {@inheritDoc}
     */
    public function getSolde(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSolde', []);

        return parent::getSolde();
    }

    /**
     * {@inheritDoc}
     */
    public function setSolde(string $solde): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSolde', [$solde]);

        return parent::setSolde($solde);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTimeInterface $dateCreation): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $status): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionDepot(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionDepot', []);

        return parent::getTransactionDepot();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransactionDepot(\App\Entity\Transaction $transactionDepot): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransactionDepot', [$transactionDepot]);

        return parent::addTransactionDepot($transactionDepot);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTransactionDepot(\App\Entity\Transaction $transactionDepot): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTransactionDepot', [$transactionDepot]);

        return parent::removeTransactionDepot($transactionDepot);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionRetrait(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionRetrait', []);

        return parent::getTransactionRetrait();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransactionRetrait(\App\Entity\Transaction $transactionRetrait): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransactionRetrait', [$transactionRetrait]);

        return parent::addTransactionRetrait($transactionRetrait);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTransactionRetrait(\App\Entity\Transaction $transactionRetrait): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTransactionRetrait', [$transactionRetrait]);

        return parent::removeTransactionRetrait($transactionRetrait);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDernierAccess(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDernierAccess', []);

        return parent::getDateDernierAccess();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDernierAccess(?\DateTimeInterface $dateDernierAccess): \App\Entity\Compte
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDernierAccess', [$dateDernierAccess]);

        return parent::setDateDernierAccess($dateDernierAccess);
    }

}
